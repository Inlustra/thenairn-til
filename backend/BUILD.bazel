# Add rules here to build your software
# See https://docs.bazel.build/versions/master/build-ref.html#BUILD_files

# Allow any ts_library rules in this workspace to reference the config
# Note: if you move the tsconfig.json file to a subdirectory, you can add an alias() here instead
#   so that ts_library rules still use it by default.
#   See https://www.npmjs.com/package/@bazel/typescript#installation
load("@npm_bazel_typescript//:index.bzl", "ts_devserver", "ts_library")

exports_files(
    ["tsconfig.json"],
    visibility = ["//:__subpackages__"],
)


ts_library(
    name = "server",
    srcs = [":src/index.ts"],
    deps = [":schema-types"],
)

ts_devserver(
    name = "devserver",
    # This is the path we'll request from the browser, see index.html
    serving_path = ":dist/bundle.js",
    # We'll collect all the devmode JS sources from these TypeScript libraries
    deps = [":server"],
    # The devserver can serve our static files too
    # static_files = ["index.html"],
)
